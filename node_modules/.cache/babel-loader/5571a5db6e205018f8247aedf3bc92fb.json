{"ast":null,"code":"var _jsxFileName = \"/home/shweta/GDEGame/src/components/AccordionElement.jsx\";\nimport React, { Component, useContext } from 'react';\nimport glob from './global.jsx';\nimport Button from './Button.jsx';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Overlay from 'react-bootstrap/Overlay';\n\nclass AccordionElement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: []\n    };\n\n    this.handleButtons = element => {\n      //to do : check if we actually have sufficient funds\n      // let x = element\n      // const options = this.state.options.map(c => {\n      //   c.status = ((element !== undefined && c.id === element.id) ? !c.status : c.status);\n      //   return c;\n      // });\n      // this.setState({ options });\n      this.props.changeButtonStatus(element);\n    };\n\n    this.state.options = this.props.options;\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {}\n\n  render() {\n    let details = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, \" \", this.state.options.map(el => /*#__PURE__*/React.createElement(Button, {\n      key: el.id,\n      el: el,\n      onSelectOption: this.handleButtons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 35\n      }\n    })));\n    let classes = \"btn btn-sm btn-block btn-\";\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '10rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AccordionSummary, {\n      \"aria-controls\": \"panel1bh-content\",\n      id: \"panel1bh-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n      placement: \"right\",\n      delay: {\n        show: 250,\n        hide: 400\n      },\n      overlay: /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n        id: \"button-tooltip\"\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }), this.props.info),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, this.props.label))), /*#__PURE__*/React.createElement(AccordionDetails, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, details)));\n  }\n\n}\n\nexport default AccordionElement;","map":{"version":3,"sources":["/home/shweta/GDEGame/src/components/AccordionElement.jsx"],"names":["React","Component","useContext","glob","Button","Card","Accordion","AccordionDetails","AccordionSummary","OverlayTrigger","Tooltip","FormControlLabel","Switch","Grid","Overlay","AccordionElement","constructor","props","state","options","handleButtons","element","changeButtonStatus","shouldComponentUpdate","nextProps","nextState","render","details","map","el","id","classes","width","show","hide","info","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,gBAAN,SAA+Bd,SAA/B,CAAyC;AAOvCe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SALnBC,KAKmB,GALX;AACNC,MAAAA,OAAO,EAAG;AADJ,KAKW;;AAAA,SAUnBC,aAVmB,GAUFC,OAAD,IAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAKJ,KAAL,CAAWK,kBAAX,CAA8BD,OAA9B;AACD,KAnBkB;;AAEjB,SAAKH,KAAL,CAAWC,OAAX,GAAqB,KAAKF,KAAL,CAAWE,OAAhC;AAED;;AAEDI,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAE3C;;AAaDC,EAAAA,MAAM,GAAG;AAEP,QAAIC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,KAAKT,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CACEC,EAAE,iBAAI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,EAAE,CAACC,EAAhB;AAAoB,MAAA,EAAE,EAAED,EAAxB;AAA4B,MAAA,cAAc,EAAE,KAAKT,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,CAAR,CAAd;AAIA,QAAIW,OAAO,GAAG,2BAAd;AAGA,wBACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,gBAAD;AACA,uBAAc,kBADd;AAEA,MAAA,EAAE,EAAC,iBAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBAAC,cAAD;AACA,MAAA,SAAS,EAAC,OADV;AAEA,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAFP;AAGA,MAAA,OAAO,eACL,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC;AAAZ,SAAiC,KAAKjB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACC,KAAKA,KAAL,CAAWkB,IADZ,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASA;AAAK,MAAA,SAAS,EAAEJ,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKd,KAAL,CAAWmB,KAArC,CATA,CAJA,CAFA,eAoBA,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCT,OADD,CApBA,CADA,CADF;AA8BD;;AAnEsC;;AAuEzC,eAAeZ,gBAAf","sourcesContent":["import React, { Component, useContext } from 'react';\nimport glob from './global.jsx'\nimport Button from './Button.jsx'\nimport Card from 'react-bootstrap/Card';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Overlay from 'react-bootstrap/Overlay'\n\nclass AccordionElement extends Component {\n\n  state = {\n    options : [],\n\n  }\n\n  constructor(props) {\n    super(props);\n    this.state.options = this.props.options;\n\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n  }\n\n  handleButtons = (element) => {\n    //to do : check if we actually have sufficient funds\n    // let x = element\n    // const options = this.state.options.map(c => {\n    //   c.status = ((element !== undefined && c.id === element.id) ? !c.status : c.status);\n    //   return c;\n    // });\n    // this.setState({ options });\n    this.props.changeButtonStatus(element);\n  }\n\n  render() {\n\n    let details = <div> { this.state.options.map(\n                            el => <Button key={el.id} el={el} onSelectOption={this.handleButtons} />\n                        )}\n                  </div>;\n    let classes = \"btn btn-sm btn-block btn-\";\n\n\n    return (\n      <Card style={{ width: '10rem'}}>\n      <Accordion\n      >\n      <AccordionSummary\n      aria-controls=\"panel1bh-content\"\n      id=\"panel1bh-header\"\n      >\n      <OverlayTrigger\n      placement=\"right\"\n      delay={{ show: 250, hide: 400 }}\n      overlay={\n        <Tooltip id=\"button-tooltip\" {...this.props}>\n        {this.props.info}\n        </Tooltip>\n      }\n      >\n      <div className={classes}>{this.props.label}</div>\n      </OverlayTrigger>\n\n      </AccordionSummary>\n\n      <AccordionDetails >\n      {details}\n      </AccordionDetails>\n      </Accordion>\n      </Card>\n\n    )\n\n  }\n\n}\n\nexport default AccordionElement;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { deepmerge } from '@material-ui/utils';\nimport getThemeValue from './getThemeValue';\nimport { handleBreakpoints, mergeBreakpointsInOrder } from './breakpoints';\nimport borders from './borders';\nimport display from './display';\nimport flexbox from './flexbox';\nimport grid from './grid';\nimport positions from './positions';\nimport palette from './palette';\nimport shadows from './shadows';\nimport sizing from './sizing';\nimport spacing from './spacing';\nimport typography from './typography';\nconst filterProps = [...borders.filterProps, ...display.filterProps, ...flexbox.filterProps, ...grid.filterProps, ...positions.filterProps, ...palette.filterProps, ...shadows.filterProps, ...sizing.filterProps, ...spacing.filterProps, ...typography.filterProps, 'sx'];\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nfunction styleFunctionSx(props) {\n  const {\n    sx: styles,\n    theme\n  } = props || {};\n  if (!styles) return null;\n\n  if (typeof styles === 'function') {\n    return styles(theme);\n  }\n\n  if (typeof styles !== 'object') {\n    // value\n    return styles;\n  }\n\n  let css = {};\n  Object.keys(styles).forEach(styleKey => {\n    if (typeof styles[styleKey] === 'object') {\n      if (filterProps.indexOf(styleKey) !== -1) {\n        css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n      } else {\n        const breakpointsValues = handleBreakpoints({\n          theme\n        }, styles[styleKey], x => ({\n          [styleKey]: x\n        }));\n\n        if (objectsHaveSameKeys(breakpointsValues, styles[styleKey])) {\n          const transformedValue = styleFunctionSx({\n            sx: styles[styleKey],\n            theme\n          });\n          css[styleKey] = transformedValue;\n        } else {\n          css = deepmerge(css, breakpointsValues);\n        }\n      }\n    } else if (typeof styles[styleKey] === 'function') {\n      css = deepmerge(css, {\n        [styleKey]: styles[styleKey](theme)\n      });\n    } else {\n      css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n    }\n  });\n  return mergeBreakpointsInOrder(theme.breakpoints, css);\n}\n\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;","map":{"version":3,"sources":["/home/shweta/GDEGame/node_modules/@material-ui/system/esm/styleFunctionSx.js"],"names":["deepmerge","getThemeValue","handleBreakpoints","mergeBreakpointsInOrder","borders","display","flexbox","grid","positions","palette","shadows","sizing","spacing","typography","filterProps","objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","styleFunctionSx","props","sx","styles","theme","css","forEach","styleKey","indexOf","breakpointsValues","x","transformedValue","breakpoints"],"mappings":"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","sourcesContent":["import { deepmerge } from '@material-ui/utils';\nimport getThemeValue from './getThemeValue';\nimport { handleBreakpoints, mergeBreakpointsInOrder } from './breakpoints';\nimport borders from './borders';\nimport display from './display';\nimport flexbox from './flexbox';\nimport grid from './grid';\nimport positions from './positions';\nimport palette from './palette';\nimport shadows from './shadows';\nimport sizing from './sizing';\nimport spacing from './spacing';\nimport typography from './typography';\nconst filterProps = [...borders.filterProps, ...display.filterProps, ...flexbox.filterProps, ...grid.filterProps, ...positions.filterProps, ...palette.filterProps, ...shadows.filterProps, ...sizing.filterProps, ...spacing.filterProps, ...typography.filterProps, 'sx'];\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nfunction styleFunctionSx(props) {\n  const {\n    sx: styles,\n    theme\n  } = props || {};\n  if (!styles) return null;\n\n  if (typeof styles === 'function') {\n    return styles(theme);\n  }\n\n  if (typeof styles !== 'object') {\n    // value\n    return styles;\n  }\n\n  let css = {};\n  Object.keys(styles).forEach(styleKey => {\n    if (typeof styles[styleKey] === 'object') {\n      if (filterProps.indexOf(styleKey) !== -1) {\n        css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n      } else {\n        const breakpointsValues = handleBreakpoints({\n          theme\n        }, styles[styleKey], x => ({\n          [styleKey]: x\n        }));\n\n        if (objectsHaveSameKeys(breakpointsValues, styles[styleKey])) {\n          const transformedValue = styleFunctionSx({\n            sx: styles[styleKey],\n            theme\n          });\n          css[styleKey] = transformedValue;\n        } else {\n          css = deepmerge(css, breakpointsValues);\n        }\n      }\n    } else if (typeof styles[styleKey] === 'function') {\n      css = deepmerge(css, {\n        [styleKey]: styles[styleKey](theme)\n      });\n    } else {\n      css = deepmerge(css, getThemeValue(styleKey, styles[styleKey], theme));\n    }\n  });\n  return mergeBreakpointsInOrder(theme.breakpoints, css);\n}\n\nstyleFunctionSx.filterProps = ['sx'];\nexport default styleFunctionSx;"]},"metadata":{},"sourceType":"module"}
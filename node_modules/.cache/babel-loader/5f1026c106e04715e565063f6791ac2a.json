{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport styled from '@material-ui/styled-engine';\nimport { propsToClassKey } from '@material-ui/styles';\nimport { unstable_styleFunctionSx as styleFunctionSx } from '@material-ui/system';\nimport defaultTheme from './defaultTheme';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  let styleOverrides = {};\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    styleOverrides = theme.components[name].styleOverrides;\n  }\n\n  return styleOverrides;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components, _theme$components$nam;\n\n  const {\n    styleProps = {}\n  } = props;\n  let variantsStyles = {};\n  const themeVariants = theme === null || theme === void 0 ? void 0 : (_theme$components = theme.components) === null || _theme$components === void 0 ? void 0 : (_theme$components$nam = _theme$components[name]) === null || _theme$components$nam === void 0 ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (styleProps[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles = _extends({}, variantsStyles, styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nconst shouldForwardProp = prop => prop !== 'styleProps' && prop !== 'theme' && prop !== 'sx';\n\nconst experimentalStyled = (tag, options, muiOptions = {}) => {\n  const name = muiOptions.muiName;\n  const defaultStyledResolver = styled(tag, _extends({\n    shouldForwardProp,\n    label: name\n  }, options));\n\n  const muiStyledResolver = (styleArg, ...expressions) => {\n    const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n      return typeof stylesArg === 'function' ? _ref => {\n        let {\n          theme: themeInput\n        } = _ref,\n            rest = _objectWithoutPropertiesLoose(_ref, [\"theme\"]);\n\n        return stylesArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, rest));\n      } : stylesArg;\n    }) : [];\n    let transformedStyleArg = styleArg;\n\n    if (Array.isArray(styleArg)) {\n      // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles\n      transformedStyleArg = [...styleArg, '', '', ''];\n      transformedStyleArg.raw = [...styleArg.raw, '', '', ''];\n    } else if (typeof styleArg === 'function') {\n      // If the type is function, we need to define the default theme\n      transformedStyleArg = _ref2 => {\n        let {\n          theme: themeInput\n        } = _ref2,\n            rest = _objectWithoutPropertiesLoose(_ref2, [\"theme\"]);\n\n        return styleArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, rest));\n      };\n    }\n\n    expressionsWithDefaultTheme.push(props => {\n      if (name && muiOptions.overridesResolver) {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return muiOptions.overridesResolver(props, getStyleOverrides(name, theme), name);\n      }\n\n      return '';\n    });\n    expressionsWithDefaultTheme.push(props => {\n      if (name) {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return variantsResolver(props, getVariantStyles(name, theme), theme, name);\n      }\n\n      return '';\n    });\n    expressionsWithDefaultTheme.push(props => {\n      const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n      return styleFunctionSx(_extends({}, props, {\n        theme\n      }));\n    });\n    return defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n  };\n\n  return muiStyledResolver;\n};\n\nexport default experimentalStyled;","map":{"version":3,"sources":["/home/shweta/GDEGame/node_modules/@material-ui/core/styles/experimentalStyled.js"],"names":["_objectWithoutPropertiesLoose","_extends","styled","propsToClassKey","unstable_styleFunctionSx","styleFunctionSx","defaultTheme","isEmpty","obj","Object","keys","length","getStyleOverrides","name","theme","styleOverrides","components","getVariantStyles","variants","variantsStyles","forEach","definition","key","props","style","variantsResolver","styles","_theme$components","_theme$components$nam","styleProps","themeVariants","themeVariant","isMatch","shouldForwardProp","prop","experimentalStyled","tag","options","muiOptions","muiName","defaultStyledResolver","label","muiStyledResolver","styleArg","expressions","expressionsWithDefaultTheme","map","stylesArg","_ref","themeInput","rest","transformedStyleArg","Array","isArray","raw","_ref2","push","overridesResolver"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport styled from '@material-ui/styled-engine';\nimport { propsToClassKey } from '@material-ui/styles';\nimport { unstable_styleFunctionSx as styleFunctionSx } from '@material-ui/system';\nimport defaultTheme from './defaultTheme';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  let styleOverrides = {};\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    styleOverrides = theme.components[name].styleOverrides;\n  }\n\n  return styleOverrides;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components, _theme$components$nam;\n\n  const {\n    styleProps = {}\n  } = props;\n  let variantsStyles = {};\n  const themeVariants = theme === null || theme === void 0 ? void 0 : (_theme$components = theme.components) === null || _theme$components === void 0 ? void 0 : (_theme$components$nam = _theme$components[name]) === null || _theme$components$nam === void 0 ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (styleProps[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles = _extends({}, variantsStyles, styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nconst shouldForwardProp = prop => prop !== 'styleProps' && prop !== 'theme' && prop !== 'sx';\n\nconst experimentalStyled = (tag, options, muiOptions = {}) => {\n  const name = muiOptions.muiName;\n  const defaultStyledResolver = styled(tag, _extends({\n    shouldForwardProp,\n    label: name\n  }, options));\n\n  const muiStyledResolver = (styleArg, ...expressions) => {\n    const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n      return typeof stylesArg === 'function' ? (_ref) => {\n        let {\n          theme: themeInput\n        } = _ref,\n            rest = _objectWithoutPropertiesLoose(_ref, [\"theme\"]);\n\n        return stylesArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, rest));\n      } : stylesArg;\n    }) : [];\n    let transformedStyleArg = styleArg;\n\n    if (Array.isArray(styleArg)) {\n      // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles\n      transformedStyleArg = [...styleArg, '', '', ''];\n      transformedStyleArg.raw = [...styleArg.raw, '', '', ''];\n    } else if (typeof styleArg === 'function') {\n      // If the type is function, we need to define the default theme\n      transformedStyleArg = (_ref2) => {\n        let {\n          theme: themeInput\n        } = _ref2,\n            rest = _objectWithoutPropertiesLoose(_ref2, [\"theme\"]);\n\n        return styleArg(_extends({\n          theme: isEmpty(themeInput) ? defaultTheme : themeInput\n        }, rest));\n      };\n    }\n\n    expressionsWithDefaultTheme.push(props => {\n      if (name && muiOptions.overridesResolver) {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return muiOptions.overridesResolver(props, getStyleOverrides(name, theme), name);\n      }\n\n      return '';\n    });\n    expressionsWithDefaultTheme.push(props => {\n      if (name) {\n        const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n        return variantsResolver(props, getVariantStyles(name, theme), theme, name);\n      }\n\n      return '';\n    });\n    expressionsWithDefaultTheme.push(props => {\n      const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n      return styleFunctionSx(_extends({}, props, {\n        theme\n      }));\n    });\n    return defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n  };\n\n  return muiStyledResolver;\n};\n\nexport default experimentalStyled;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/shweta/GDEGame/src/components/GameSpace.jsx\";\nimport React, { Component } from 'react';\nimport NavBar from './NavBar.jsx';\nimport AccordionElement from './AccordionElement.jsx';\nimport glob from './global.jsx';\nimport SkillBar from 'react-skillbars';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport Card from 'react-bootstrap/Card';\nimport Sound from 'react-sound';\n\nclass GameSpace extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: this.props.location.info.term,\n      startApproval: this.props.location.info.startApproval,\n      minApproval: this.props.location.info.minApproval,\n      mode: this.props.location.info.mode,\n      curFunds: 5,\n      food: 100,\n      time: 360,\n      total: 240,\n      start: 0,\n      last: 0,\n      last_fund: 0,\n      last_app: 0,\n      health_perc: 60,\n      defence_perc: 60,\n      agriculture_perc: 60,\n      education_perc: 60,\n      last_health_perc: 60,\n      last_defence_perc: 60,\n      last_agriculture_perc: 60,\n      last_education_perc: 60,\n      sc1_time: 100000000,\n      sc2_time: 100000000,\n      sc3_time: 100000000,\n      sc4_time: 100000000,\n      sc5_time: 100000000,\n      sc6_time: 100000000,\n      sc7_time: 100000000,\n      sc8_time: 100000000,\n      sc1_flag: true,\n      sc2_flag: true,\n      sc3_flag: true,\n      sc4_flag: true,\n      sc5_flag: true,\n      sc6_flag: true,\n      sc7_flag: true,\n      sc8_flag: true,\n      approval: 40,\n      dept: undefined,\n      curDept: undefined,\n      depts: [{\n        id: glob.healthId,\n        label: \"Health\",\n        info: glob.healthInfo,\n        invst: glob.healthInvst\n      }, {\n        id: glob.defenceId,\n        label: \"Defence\",\n        info: glob.defenceInfo,\n        invst: glob.defenceInvst\n      }, {\n        id: glob.agricultureId,\n        label: \"Agriculture\",\n        info: glob.agricultureInfo,\n        invst: glob.agricultureInvst\n      }, {\n        id: glob.educationId,\n        label: \"Education\",\n        info: glob.educationInfo,\n        invst: glob.educationInvst\n      }],\n      healthOptions: [{\n        id: glob.healthOp1,\n        label: \"ho1\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.healthOp2,\n        label: \"ho2\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.healthOp3,\n        label: \"ho3\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.healthOp4,\n        label: \"ho4\",\n        cost: 6,\n        status: false\n      }, {\n        id: glob.healthOp5,\n        label: \"ho5\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.healthOp6,\n        label: \"ho6\",\n        cost: 9,\n        status: false\n      }, {\n        id: glob.healthOp7,\n        label: \"ho7\",\n        cost: 4,\n        status: false\n      }, {\n        id: glob.healthOp8,\n        label: \"ho8\",\n        cost: 3,\n        status: false\n      }],\n      defenceOptions: [{\n        id: glob.defenceOp1,\n        label: \"do1\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.defenceOp2,\n        label: \"do2\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.defenceOp3,\n        label: \"do3\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.defenceOp4,\n        label: \"do4\",\n        cost: 6,\n        status: false\n      }, {\n        id: glob.defenceOp5,\n        label: \"do5\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.defenceOp6,\n        label: \"do6\",\n        cost: 9,\n        status: false\n      }, {\n        id: glob.defenceOp7,\n        label: \"do7\",\n        cost: 4,\n        status: false\n      }, {\n        id: glob.defenceOp8,\n        label: \"do8\",\n        cost: 3,\n        status: false\n      }],\n      agricultureOptions: [{\n        id: glob.agricultureOp1,\n        label: \"ao1\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.agricultureOp2,\n        label: \"ao2\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.agricultureOp3,\n        label: \"ao3\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.agricultureOp4,\n        label: \"ao4\",\n        cost: 6,\n        status: false\n      }, {\n        id: glob.agricultureOp5,\n        label: \"ao5\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.agricultureOp6,\n        label: \"ao6\",\n        cost: 9,\n        status: false\n      }, {\n        id: glob.agricultureOp7,\n        label: \"ao7\",\n        cost: 4,\n        status: false\n      }, {\n        id: glob.agricultureOp8,\n        label: \"ao8\",\n        cost: 3,\n        status: false\n      }],\n      educationOptions: [{\n        id: glob.educationOp1,\n        label: \"eo1\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.educationOp2,\n        label: \"eo2\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.educationOp3,\n        label: \"eo3\",\n        cost: 2,\n        status: false\n      }, {\n        id: glob.educationOp4,\n        label: \"eo4\",\n        cost: 6,\n        status: false\n      }, {\n        id: glob.educationOp5,\n        label: \"eo5\",\n        cost: 3,\n        status: false\n      }, {\n        id: glob.educationOp6,\n        label: \"eo6\",\n        cost: 9,\n        status: false\n      }, {\n        id: glob.educationOp7,\n        label: \"eo7\",\n        cost: 4,\n        status: false\n      }, {\n        id: glob.educationOp8,\n        label: \"eo8\",\n        cost: 3,\n        status: false\n      }]\n    };\n\n    this.getOptions = id => {\n      switch (id) {\n        case glob.healthId:\n          return this.state.healthOptions;\n\n        case glob.educationId:\n          return this.state.educationOptions;\n\n        case glob.agricultureId:\n          return this.state.agricultureOptions;\n\n        case glob.defenceId:\n          return this.state.defenceOptions;\n\n        default:\n          break;\n      }\n    };\n\n    this.increaseHealth = x => {\n      let y = x;\n\n      if (y < 0) {\n        y = 1.5 * x;\n      }\n\n      y = this.state.health_perc + y;\n      this.setState({\n        time: this.state.time,\n        health_perc: Number(y)\n      });\n    };\n\n    this.increaseDef = x => {\n      let y = x;\n\n      if (y < 0) {\n        y = 1.5 * x;\n      }\n\n      y = this.state.defence_perc + y;\n      this.setState({\n        defence_perc: Number(y)\n      });\n    };\n\n    this.increaseAgri = x => {\n      let y = x;\n\n      if (y < 0) {\n        y = 1.5 * x;\n      }\n\n      y = this.state.agriculture_perc + y;\n      this.setState({\n        agriculture_perc: Number(y)\n      });\n    };\n\n    this.increaseEdu = x => {\n      let y = x;\n\n      if (y < 0) {\n        y = 1.5 * x;\n      }\n\n      y = this.state.education_perc + y;\n      this.setState({\n        education_perc: Number(y)\n      });\n    };\n\n    this.changeButtonStatus = element => {\n      console.log(element.id, element.status);\n      let curFunds = this.state.curFunds;\n      let options1 = this.state.defenceOptions.map(c => {\n        if (element !== undefined && c.id === element.id) {\n          if (c.status) {\n            curFunds = curFunds + c.cost * 0.6;\n            glob.defenceInvst = glob.defenceInvst - c.cost;\n            this.increaseDef(-1 * c.cost);\n          } else {\n            if (this.state.curFunds < c.cost) {\n              alert(\"Not enough funds bruh\");\n              c.status = !c.status;\n            } else {\n              curFunds = curFunds - c.cost;\n              glob.defenceInvst = glob.defenceInvst + c.cost;\n              this.increaseDef(c.cost);\n            }\n          }\n\n          c.status = !c.status; // console.log(curFunds, c.cost)\n        }\n\n        return c;\n      });\n      let options2 = this.state.healthOptions.map(c => {\n        if (element !== undefined && c.id === element.id) {\n          if (c.status) {\n            curFunds = curFunds + c.cost * 0.6;\n            glob.healthInvst = glob.healthInvst - c.cost;\n            this.increaseHealth(-1 * c.cost);\n          } else {\n            if (this.state.curFunds < c.cost) {\n              alert(\"Not enough funds bruh\");\n              c.status = !c.status;\n            } else {\n              curFunds = curFunds - c.cost;\n              glob.healthInvst = glob.healthInvst + c.cost;\n              this.increaseHealth(c.cost);\n            }\n          } // alert(glob.healthInvst)\n\n\n          c.status = !c.status; // console.log(curFunds, c.cost)\n        }\n\n        return c;\n      });\n      let options3 = this.state.agricultureOptions.map(c => {\n        if (element !== undefined && c.id === element.id) {\n          if (c.status) {\n            curFunds = curFunds + c.cost * 0.6;\n            glob.agricultureInvst = glob.agricultureInvst - c.cost;\n            this.increaseAgri(-1 * c.cost);\n          } else {\n            if (this.state.curFunds < c.cost) {\n              alert(\"Not enough funds bruh\");\n              c.status = !c.status;\n            } else {\n              curFunds = curFunds - c.cost;\n              glob.agricultureInvst = glob.agricultureInvst + c.cost;\n              this.increaseAgri(c.cost);\n            }\n          }\n\n          c.status = !c.status; // console.log(curFunds, c.cost)\n        }\n\n        return c;\n      });\n      let options4 = this.state.educationOptions.map(c => {\n        if (element !== undefined && c.id === element.id) {\n          if (c.status) {\n            curFunds = curFunds + c.cost * 0.6;\n            glob.educationInvst = glob.educationInvst - c.cost;\n            this.increaseEdu(-1 * c.cost);\n          } else {\n            if (this.state.curFunds < c.cost) {\n              alert(\"Not enough funds bruh\");\n              c.status = !c.status;\n            } else {\n              curFunds = curFunds - c.cost;\n              glob.educationInvst = glob.educationInvst + c.cost;\n              this.increaseEdu(c.cost);\n            }\n          }\n\n          c.status = !c.status; // console.log(curFunds, c.cost)\n        }\n\n        return c;\n      });\n      this.setState({\n        options1,\n        options2,\n        options3,\n        options4,\n        curFunds\n      }); // alert(\"set\")\n    };\n\n    this.startTimer = () => {\n      this.setState({\n        time: this.state.time,\n        start: Date.now()\n      });\n      this.timer = setInterval(() => this.setState({\n        time: (this.state.total * 1000 + this.state.start - Date.now()) / 1000\n      }), 1);\n    };\n\n    this.updatePerc = () => {\n      let health_rate = (100 - this.state.health_perc) * 0.6 / 100;\n      let defence_rate = (100 - this.state.defence_perc) * 0.5 / 100;\n      let education_rate = (100 - this.state.education_perc) * 0.45 / 100;\n      let agriculture_rate = (100 - this.state.agriculture_perc) * 0.4 / 100;\n\n      if (isNaN(health_rate)) {\n        alert(this.state.health_perc);\n      }\n\n      this.setState({\n        health_perc: Number((this.state.health_perc - health_rate).toFixed(1)),\n        defence_perc: Number((this.state.defence_perc - defence_rate).toFixed(1)),\n        education_perc: Number((this.state.education_perc - education_rate).toFixed(1)),\n        agriculture_perc: Number((this.state.agriculture_perc - agriculture_rate).toFixed(1)),\n        last: this.state.total - this.state.time\n      });\n    };\n\n    this.updateFund = () => {\n      let added_fund = 0.05 * this.state.approval;\n      added_fund = Number(added_fund.toFixed(1));\n      this.setState({\n        last_fund: this.state.total - this.state.time,\n        curFunds: Number((this.state.curFunds + added_fund).toFixed(2))\n      });\n    };\n\n    this.updateVoter = () => {\n      let health_change = this.state.health_perc - this.state.last_health_perc;\n      let def_change = this.state.defence_perc - this.state.last_defence_perc;\n      let agri_change = this.state.agriculture_perc - this.state.last_agriculture_perc;\n      let edu_change = this.state.education_perc - this.state.last_education_perc;\n      let app_change = (0.6 * health_change + 0.4 * def_change + 0.2 * agri_change + 0.1 * edu_change) / 2; // alert(edu_change)\n\n      this.setState({\n        last_app: this.state.total - this.state.time,\n        approval: Number((this.state.approval + app_change).toFixed(2)),\n        last_agriculture_perc: this.state.agriculture_perc,\n        last_defence_perc: this.state.defence_perc,\n        last_health_perc: this.state.health_perc,\n        last_education_perc: this.state.education_perc\n      });\n    };\n\n    this.maxApp = () => {\n      this.setState({\n        approval: 100\n      });\n    };\n\n    this.minFunds = () => {\n      this.setState({\n        curFunds: 0\n      });\n    };\n\n    this.scenarios = () => {\n      let sc1_flag = this.state.sc1_flag;\n      let sc2_flag = this.state.sc2_flag;\n      let sc3_flag = this.state.sc3_flag;\n      let sc4_flag = this.state.sc4_flag;\n      let sc5_flag = this.state.sc5_flag;\n      let sc6_flag = this.state.sc6_flag;\n      let sc7_flag = this.state.sc7_flag;\n      let sc8_flag = this.state.sc8_flag;\n      let sc1_time = this.state.sc1_time;\n      let sc2_time = this.state.sc2_time;\n      let sc3_time = this.state.sc3_time;\n      let sc4_time = this.state.sc4_time;\n      let sc5_time = this.state.sc5_time;\n      let sc6_time = this.state.sc6_time;\n      let sc7_time = this.state.sc7_time;\n      let sc8_time = this.state.sc8_time;\n      let x = Math.random();\n\n      if (x > 0.5) {\n        sc1_flag = false;\n        let y = Math.random() * this.state.total;\n        sc1_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc2_flag = false;\n        let y = Math.random() * this.state.total;\n        sc2_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc3_flag = false;\n        let y = Math.random() * this.state.total;\n        sc3_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc4_flag = false;\n        let y = Math.random() * this.state.total;\n        sc4_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc5_flag = false;\n        let y = Math.random() * this.state.total;\n        sc5_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc6_flag = false;\n        let y = Math.random() * this.state.total;\n        sc6_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc7_flag = false;\n        let y = Math.random() * this.state.total;\n        sc7_time = y;\n      }\n\n      x = Math.random();\n\n      if (x > 0.5) {\n        sc8_flag = false;\n        let y = Math.random() * this.state.total;\n        sc8_time = y;\n      }\n\n      alert(sc1_time, sc2_time, sc3_time, sc4_time, sc5_time, sc6_time, sc7_time, sc8_time);\n      this.setState({\n        sc1_flag: sc1_flag,\n        sc2_flag: sc2_flag,\n        sc3_flag: sc3_flag,\n        sc4_flag: sc4_flag,\n        sc5_flag: sc5_flag,\n        sc6_flag: sc6_flag,\n        sc7_flag: sc7_flag,\n        sc8_flag: sc8_flag,\n        sc1_time: sc1_time,\n        sc2_time: sc2_time,\n        sc3_time: sc3_time,\n        sc4_time: sc4_time,\n        sc5_time: sc5_time,\n        sc6_time: sc6_time,\n        sc7_time: sc7_time,\n        sc8_time: sc8_time\n      });\n    };\n\n    this.handleSelectDept = key => (event, isExpanded) => {\n      if (isExpanded === undefined || isExpanded === true) {\n        this.setState({\n          curDept: key\n        });\n      }\n    };\n\n    this.scene1 = () => {\n      alert(\"woah man\");\n      this.setState({\n        sc1_flag: true\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      total: this.state.term,\n      approval: this.state.startApproval\n    }); // this.scenarios()\n\n    this.startTimer();\n  }\n\n  render() {\n    // console.log(this.state.term, this.state.startApproval, this.state.minApproval, this.state.mode)\n    // alert(this.state.curfunds)\n    // alert(this.state.time)\n    if (this.state.time < 0) {\n      alert(\"time up bruh\");\n    }\n\n    if (this.state.approval < this.state.minApproval || this.state.health_perc <= 0 || this.state.defence_perc <= 0 || this.state.education_perc <= 0 || this.state.agriculture_perc <= 0) {\n      alert(\"GG\");\n    }\n\n    if (this.state.total - this.state.time - this.state.last > 1 && this.state.total - this.state.time > 5) {\n      this.updatePerc();\n    }\n\n    if (this.state.total - this.state.time - this.state.last_fund > 20 && this.state.total - this.state.time > 5) {\n      this.updateFund();\n    }\n\n    if (this.state.total - this.state.time - this.state.last_app > 1 && this.state.total - this.state.time > 5) {\n      this.updateVoter();\n    }\n\n    if (this.state.approval > 100) {\n      this.maxApp();\n    }\n\n    if (this.state.curFunds < 0) {\n      this.minFunds();\n    }\n\n    if (this.state.sc1_flag) return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 7\n      }\n    }, \" Current funding : \", this.state.curFunds.toFixed(2), \" Time left : \", Math.ceil(this.state.time), \" Approval : \", this.state.approval, \" health_perc : \", this.state.health_perc, \" defence_perc : \", this.state.defence_perc, \" agriculture_perc : \", this.state.agriculture_perc, \" education_perc : \", this.state.education_perc), this.state.depts.map(el => /*#__PURE__*/React.createElement(AccordionElement, {\n      id: el.id,\n      label: el.label,\n      info: el.info,\n      options: this.getOptions(el.id),\n      changeButtonStatus: this.changeButtonStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default GameSpace;","map":{"version":3,"sources":["/home/shweta/GDEGame/src/components/GameSpace.jsx"],"names":["React","Component","NavBar","AccordionElement","glob","SkillBar","Row","Container","Col","PieChart","Card","Sound","GameSpace","constructor","props","state","term","location","info","startApproval","minApproval","mode","curFunds","food","time","total","start","last","last_fund","last_app","health_perc","defence_perc","agriculture_perc","education_perc","last_health_perc","last_defence_perc","last_agriculture_perc","last_education_perc","sc1_time","sc2_time","sc3_time","sc4_time","sc5_time","sc6_time","sc7_time","sc8_time","sc1_flag","sc2_flag","sc3_flag","sc4_flag","sc5_flag","sc6_flag","sc7_flag","sc8_flag","approval","dept","undefined","curDept","depts","id","healthId","label","healthInfo","invst","healthInvst","defenceId","defenceInfo","defenceInvst","agricultureId","agricultureInfo","agricultureInvst","educationId","educationInfo","educationInvst","healthOptions","healthOp1","cost","status","healthOp2","healthOp3","healthOp4","healthOp5","healthOp6","healthOp7","healthOp8","defenceOptions","defenceOp1","defenceOp2","defenceOp3","defenceOp4","defenceOp5","defenceOp6","defenceOp7","defenceOp8","agricultureOptions","agricultureOp1","agricultureOp2","agricultureOp3","agricultureOp4","agricultureOp5","agricultureOp6","agricultureOp7","agricultureOp8","educationOptions","educationOp1","educationOp2","educationOp3","educationOp4","educationOp5","educationOp6","educationOp7","educationOp8","getOptions","increaseHealth","x","y","setState","Number","increaseDef","increaseAgri","increaseEdu","changeButtonStatus","element","console","log","options1","map","c","alert","options2","options3","options4","startTimer","Date","now","timer","setInterval","updatePerc","health_rate","defence_rate","education_rate","agriculture_rate","isNaN","toFixed","updateFund","added_fund","updateVoter","health_change","def_change","agri_change","edu_change","app_change","maxApp","minFunds","scenarios","Math","random","handleSelectDept","key","event","isExpanded","scene1","componentDidMount","render","color","ceil","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGA,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAuRhCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAtRnBC,KAsRmB,GAtRX;AACNC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyBF,IADzB;AAENG,MAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyBC,aAFlC;AAGNC,MAAAA,WAAW,EAAG,KAAKN,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyBE,WAHjC;AAINC,MAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWG,QAAX,CAAoBC,IAApB,CAAyBG,IAJzB;AAKNC,MAAAA,QAAQ,EAAE,CALJ;AAMNC,MAAAA,IAAI,EAAE,GANA;AAONC,MAAAA,IAAI,EAAE,GAPA;AAQNC,MAAAA,KAAK,EAAE,GARD;AASNC,MAAAA,KAAK,EAAE,CATD;AAUNC,MAAAA,IAAI,EAAE,CAVA;AAWNC,MAAAA,SAAS,EAAE,CAXL;AAYNC,MAAAA,QAAQ,EAAE,CAZJ;AAaNC,MAAAA,WAAW,EAAE,EAbP;AAcNC,MAAAA,YAAY,EAAE,EAdR;AAeNC,MAAAA,gBAAgB,EAAE,EAfZ;AAgBNC,MAAAA,cAAc,EAAE,EAhBV;AAiBNC,MAAAA,gBAAgB,EAAE,EAjBZ;AAkBNC,MAAAA,iBAAiB,EAAE,EAlBb;AAmBNC,MAAAA,qBAAqB,EAAE,EAnBjB;AAoBNC,MAAAA,mBAAmB,EAAE,EApBf;AAqBNC,MAAAA,QAAQ,EAAE,SArBJ;AAsBNC,MAAAA,QAAQ,EAAE,SAtBJ;AAuBNC,MAAAA,QAAQ,EAAE,SAvBJ;AAwBNC,MAAAA,QAAQ,EAAE,SAxBJ;AAyBNC,MAAAA,QAAQ,EAAE,SAzBJ;AA0BNC,MAAAA,QAAQ,EAAE,SA1BJ;AA2BNC,MAAAA,QAAQ,EAAE,SA3BJ;AA4BNC,MAAAA,QAAQ,EAAE,SA5BJ;AA6BNC,MAAAA,QAAQ,EAAE,IA7BJ;AA8BNC,MAAAA,QAAQ,EAAE,IA9BJ;AA+BNC,MAAAA,QAAQ,EAAE,IA/BJ;AAgCNC,MAAAA,QAAQ,EAAE,IAhCJ;AAiCNC,MAAAA,QAAQ,EAAE,IAjCJ;AAkCNC,MAAAA,QAAQ,EAAE,IAlCJ;AAmCNC,MAAAA,QAAQ,EAAE,IAnCJ;AAoCNC,MAAAA,QAAQ,EAAE,IApCJ;AAqCNC,MAAAA,QAAQ,EAAE,EArCJ;AAsCNC,MAAAA,IAAI,EAAGC,SAtCD;AAuCNC,MAAAA,OAAO,EAAGD,SAvCJ;AAwCNE,MAAAA,KAAK,EAAE,CACH;AAAEC,QAAAA,EAAE,EAAEvD,IAAI,CAACwD,QAAX;AAAqBC,QAAAA,KAAK,EAAE,QAA5B;AAAsC3C,QAAAA,IAAI,EAAEd,IAAI,CAAC0D,UAAjD;AAA4DC,QAAAA,KAAK,EAAE3D,IAAI,CAAC4D;AAAxE,OADG,EAEH;AAAEL,QAAAA,EAAE,EAAEvD,IAAI,CAAC6D,SAAX;AAAsBJ,QAAAA,KAAK,EAAE,SAA7B;AAAwC3C,QAAAA,IAAI,EAAEd,IAAI,CAAC8D,WAAnD;AAA+DH,QAAAA,KAAK,EAAE3D,IAAI,CAAC+D;AAA3E,OAFG,EAGH;AAAER,QAAAA,EAAE,EAAEvD,IAAI,CAACgE,aAAX;AAA0BP,QAAAA,KAAK,EAAE,aAAjC;AAAgD3C,QAAAA,IAAI,EAAEd,IAAI,CAACiE,eAA3D;AAA2EN,QAAAA,KAAK,EAAG3D,IAAI,CAACkE;AAAxF,OAHG,EAIH;AAAEX,QAAAA,EAAE,EAAEvD,IAAI,CAACmE,WAAX;AAAwBV,QAAAA,KAAK,EAAE,WAA/B;AAA4C3C,QAAAA,IAAI,EAAEd,IAAI,CAACoE,aAAvD;AAAqET,QAAAA,KAAK,EAAE3D,IAAI,CAACqE;AAAjF,OAJG,CAxCD;AA8CNC,MAAAA,aAAa,EAAE,CACb;AAAEf,QAAAA,EAAE,EAAEvD,IAAI,CAACuE,SAAX;AAAsBd,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OADa,EAEb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC0E,SAAX;AAAsBjB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAFa,EAGb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC2E,SAAX;AAAsBlB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAHa,EAIb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC4E,SAAX;AAAsBnB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAJa,EAKb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC6E,SAAX;AAAsBpB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OALa,EAMb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC8E,SAAX;AAAsBrB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OANa,EAOb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC+E,SAAX;AAAsBtB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OAPa,EAQb;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACgF,SAAX;AAAsBvB,QAAAA,KAAK,EAAE,KAA7B;AAAoCe,QAAAA,IAAI,EAAE,CAA1C;AAA6CC,QAAAA,MAAM,EAAE;AAArD,OARa,CA9CT;AAwDNQ,MAAAA,cAAc,EAAE,CACd;AAAE1B,QAAAA,EAAE,EAAEvD,IAAI,CAACkF,UAAX;AAAuBzB,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OADc,EAEd;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACmF,UAAX;AAAuB1B,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAFc,EAGd;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACoF,UAAX;AAAuB3B,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAHc,EAId;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACqF,UAAX;AAAuB5B,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAJc,EAKd;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACsF,UAAX;AAAuB7B,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OALc,EAMd;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACuF,UAAX;AAAuB9B,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OANc,EAOd;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACwF,UAAX;AAAuB/B,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OAPc,EAQd;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACyF,UAAX;AAAuBhC,QAAAA,KAAK,EAAE,KAA9B;AAAqCe,QAAAA,IAAI,EAAE,CAA3C;AAA8CC,QAAAA,MAAM,EAAE;AAAtD,OARc,CAxDV;AAkENiB,MAAAA,kBAAkB,EAAE,CAClB;AAAEnC,QAAAA,EAAE,EAAEvD,IAAI,CAAC2F,cAAX;AAA2BlC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OADkB,EAElB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC4F,cAAX;AAA2BnC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OAFkB,EAGlB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC6F,cAAX;AAA2BpC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OAHkB,EAIlB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC8F,cAAX;AAA2BrC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OAJkB,EAKlB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC+F,cAAX;AAA2BtC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OALkB,EAMlB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACgG,cAAX;AAA2BvC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OANkB,EAOlB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACiG,cAAX;AAA2BxC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OAPkB,EAQlB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACkG,cAAX;AAA2BzC,QAAAA,KAAK,EAAE,KAAlC;AAAyCe,QAAAA,IAAI,EAAE,CAA/C;AAAkDC,QAAAA,MAAM,EAAE;AAA1D,OARkB,CAlEd;AA4EN0B,MAAAA,gBAAgB,EAAE,CAChB;AAAE5C,QAAAA,EAAE,EAAEvD,IAAI,CAACoG,YAAX;AAAyB3C,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OADgB,EAEhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACqG,YAAX;AAAyB5C,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAFgB,EAGhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACsG,YAAX;AAAyB7C,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAHgB,EAIhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACuG,YAAX;AAAyB9C,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAJgB,EAKhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACwG,YAAX;AAAyB/C,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OALgB,EAMhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAACyG,YAAX;AAAyBhD,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OANgB,EAOhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC0G,YAAX;AAAyBjD,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OAPgB,EAQhB;AAAElB,QAAAA,EAAE,EAAEvD,IAAI,CAAC2G,YAAX;AAAyBlD,QAAAA,KAAK,EAAE,KAAhC;AAAuCe,QAAAA,IAAI,EAAE,CAA7C;AAAgDC,QAAAA,MAAM,EAAE;AAAxD,OARgB;AA5EZ,KAsRW;;AAAA,SA7LnBmC,UA6LmB,GA7LLrD,EAAD,IAAQ;AACnB,cAAOA,EAAP;AAEE,aAAKvD,IAAI,CAACwD,QAAV;AAAqB,iBAAO,KAAK7C,KAAL,CAAW2D,aAAlB;;AACrB,aAAKtE,IAAI,CAACmE,WAAV;AAAwB,iBAAO,KAAKxD,KAAL,CAAWwF,gBAAlB;;AACxB,aAAKnG,IAAI,CAACgE,aAAV;AAA0B,iBAAO,KAAKrD,KAAL,CAAW+E,kBAAlB;;AAC1B,aAAK1F,IAAI,CAAC6D,SAAV;AAAsB,iBAAO,KAAKlD,KAAL,CAAWsE,cAAlB;;AACtB;AAAS;AANX;AAQD,KAoLkB;;AAAA,SAlLnB4B,cAkLmB,GAlLDC,CAAD,IAAO;AACtB,UAAIC,CAAC,GAAGD,CAAR;;AACA,UAAIC,CAAC,GAAG,CAAR,EACA;AACEA,QAAAA,CAAC,GAAG,MAAID,CAAR;AACD;;AACDC,MAAAA,CAAC,GAAG,KAAKpG,KAAL,CAAWe,WAAX,GAAyBqF,CAA7B;AACA,WAAKC,QAAL,CAAc;AACZ5F,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IADL;AAEZM,QAAAA,WAAW,EAAEuF,MAAM,CAACF,CAAD;AAFP,OAAd;AAID,KAuKkB;;AAAA,SArKnBG,WAqKmB,GArKJJ,CAAD,IAAO;AACnB,UAAIC,CAAC,GAAGD,CAAR;;AACA,UAAIC,CAAC,GAAG,CAAR,EACA;AACEA,QAAAA,CAAC,GAAG,MAAID,CAAR;AACD;;AACDC,MAAAA,CAAC,GAAG,KAAKpG,KAAL,CAAWgB,YAAX,GAA0BoF,CAA9B;AACA,WAAKC,QAAL,CAAc;AACZrF,QAAAA,YAAY,EAAEsF,MAAM,CAACF,CAAD;AADR,OAAd;AAGD,KA2JkB;;AAAA,SAzJnBI,YAyJmB,GAzJHL,CAAD,IAAO;AACpB,UAAIC,CAAC,GAAGD,CAAR;;AACA,UAAIC,CAAC,GAAG,CAAR,EACA;AACEA,QAAAA,CAAC,GAAG,MAAID,CAAR;AACD;;AAEDC,MAAAA,CAAC,GAAG,KAAKpG,KAAL,CAAWiB,gBAAX,GAA8BmF,CAAlC;AACA,WAAKC,QAAL,CAAc;AACZpF,QAAAA,gBAAgB,EAAEqF,MAAM,CAACF,CAAD;AADZ,OAAd;AAGD,KA8IkB;;AAAA,SA5InBK,WA4ImB,GA5IJN,CAAD,IAAO;AACnB,UAAIC,CAAC,GAAGD,CAAR;;AACA,UAAIC,CAAC,GAAG,CAAR,EACA;AACEA,QAAAA,CAAC,GAAG,MAAID,CAAR;AACD;;AACDC,MAAAA,CAAC,GAAG,KAAKpG,KAAL,CAAWkB,cAAX,GAA4BkF,CAAhC;AACA,WAAKC,QAAL,CAAc;AACZnF,QAAAA,cAAc,EAAEoF,MAAM,CAACF,CAAD;AADV,OAAd;AAGD,KAkIkB;;AAAA,SAhInBM,kBAgImB,GAhIGC,OAAD,IAAa;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAAC/D,EAApB,EAAwB+D,OAAO,CAAC7C,MAAhC;AACA,UAAIvD,QAAQ,GAAG,KAAKP,KAAL,CAAWO,QAA1B;AAEA,UAAIuG,QAAQ,GAAG,KAAK9G,KAAL,CAAWsE,cAAX,CAA0ByC,GAA1B,CAA8BC,CAAC,IAAI;AAChD,YAAGL,OAAO,KAAKlE,SAAZ,IAAyBuE,CAAC,CAACpE,EAAF,KAAS+D,OAAO,CAAC/D,EAA7C,EACA;AACE,cAAGoE,CAAC,CAAClD,MAAL,EACA;AACEvD,YAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAF,GAAO,GAA7B;AACAxE,YAAAA,IAAI,CAAC+D,YAAL,GAAoB/D,IAAI,CAAC+D,YAAL,GAAoB4D,CAAC,CAACnD,IAA1C;AACA,iBAAK0C,WAAL,CAAiB,CAAC,CAAD,GAAGS,CAAC,CAACnD,IAAtB;AACD,WALD,MAOA;AACE,gBAAI,KAAK7D,KAAL,CAAWO,QAAX,GAAsByG,CAAC,CAACnD,IAA5B,EACA;AACEoD,cAAAA,KAAK,CAAC,uBAAD,CAAL;AACAD,cAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd;AACD,aAJD,MAMA;AACAvD,cAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAxB;AACAxE,cAAAA,IAAI,CAAC+D,YAAL,GAAoB/D,IAAI,CAAC+D,YAAL,GAAoB4D,CAAC,CAACnD,IAA1C;AACA,mBAAK0C,WAAL,CAAiBS,CAAC,CAACnD,IAAnB;AACC;AACF;;AACDmD,UAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd,CArBF,CAuBE;AACD;;AACD,eAAOkD,CAAP;AACD,OA5Bc,CAAf;AA8BA,UAAIE,QAAQ,GAAG,KAAKlH,KAAL,CAAW2D,aAAX,CAAyBoD,GAAzB,CAA6BC,CAAC,IAAI;AAC/C,YAAGL,OAAO,KAAKlE,SAAZ,IAAyBuE,CAAC,CAACpE,EAAF,KAAS+D,OAAO,CAAC/D,EAA7C,EACA;AACE,cAAGoE,CAAC,CAAClD,MAAL,EACA;AACEvD,YAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAF,GAAO,GAA7B;AACAxE,YAAAA,IAAI,CAAC4D,WAAL,GAAmB5D,IAAI,CAAC4D,WAAL,GAAmB+D,CAAC,CAACnD,IAAxC;AACA,iBAAKqC,cAAL,CAAoB,CAAC,CAAD,GAAGc,CAAC,CAACnD,IAAzB;AACD,WALD,MAOA;AACE,gBAAI,KAAK7D,KAAL,CAAWO,QAAX,GAAsByG,CAAC,CAACnD,IAA5B,EACA;AACEoD,cAAAA,KAAK,CAAC,uBAAD,CAAL;AACAD,cAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd;AACD,aAJD,MAKI;AACJvD,cAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAxB;AACAxE,cAAAA,IAAI,CAAC4D,WAAL,GAAmB5D,IAAI,CAAC4D,WAAL,GAAmB+D,CAAC,CAACnD,IAAxC;AACA,mBAAKqC,cAAL,CAAoBc,CAAC,CAACnD,IAAtB;AACC;AACF,WAnBH,CAqBE;;;AACAmD,UAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd,CAtBF,CAuBE;AACD;;AACD,eAAOkD,CAAP;AACD,OA5Bc,CAAf;AA8BA,UAAIG,QAAQ,GAAG,KAAKnH,KAAL,CAAW+E,kBAAX,CAA8BgC,GAA9B,CAAkCC,CAAC,IAAI;AACpD,YAAGL,OAAO,KAAKlE,SAAZ,IAAyBuE,CAAC,CAACpE,EAAF,KAAS+D,OAAO,CAAC/D,EAA7C,EACA;AACE,cAAGoE,CAAC,CAAClD,MAAL,EACA;AACEvD,YAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAF,GAAO,GAA7B;AACAxE,YAAAA,IAAI,CAACkE,gBAAL,GAAwBlE,IAAI,CAACkE,gBAAL,GAAwByD,CAAC,CAACnD,IAAlD;AACA,iBAAK2C,YAAL,CAAkB,CAAC,CAAD,GAAGQ,CAAC,CAACnD,IAAvB;AACD,WALD,MAOA;AACE,gBAAI,KAAK7D,KAAL,CAAWO,QAAX,GAAsByG,CAAC,CAACnD,IAA5B,EACA;AACEoD,cAAAA,KAAK,CAAC,uBAAD,CAAL;AACAD,cAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd;AACD,aAJD,MAKI;AACJvD,cAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAxB;AACAxE,cAAAA,IAAI,CAACkE,gBAAL,GAAwBlE,IAAI,CAACkE,gBAAL,GAAwByD,CAAC,CAACnD,IAAlD;AACA,mBAAK2C,YAAL,CAAkBQ,CAAC,CAACnD,IAApB;AACC;AACF;;AAEDmD,UAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd,CArBF,CAsBE;AACD;;AAED,eAAOkD,CAAP;AACD,OA5Bc,CAAf;AA8BA,UAAII,QAAQ,GAAG,KAAKpH,KAAL,CAAWwF,gBAAX,CAA4BuB,GAA5B,CAAgCC,CAAC,IAAI;AAClD,YAAGL,OAAO,KAAKlE,SAAZ,IAAyBuE,CAAC,CAACpE,EAAF,KAAS+D,OAAO,CAAC/D,EAA7C,EACA;AACE,cAAGoE,CAAC,CAAClD,MAAL,EACA;AACEvD,YAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAF,GAAO,GAA7B;AACAxE,YAAAA,IAAI,CAACqE,cAAL,GAAsBrE,IAAI,CAACqE,cAAL,GAAsBsD,CAAC,CAACnD,IAA9C;AACA,iBAAK4C,WAAL,CAAiB,CAAC,CAAD,GAAGO,CAAC,CAACnD,IAAtB;AACD,WALD,MAOA;AACE,gBAAI,KAAK7D,KAAL,CAAWO,QAAX,GAAsByG,CAAC,CAACnD,IAA5B,EACA;AACEoD,cAAAA,KAAK,CAAC,uBAAD,CAAL;AACAD,cAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd;AACD,aAJD,MAMA;AACAvD,cAAAA,QAAQ,GAAGA,QAAQ,GAAGyG,CAAC,CAACnD,IAAxB;AACAxE,cAAAA,IAAI,CAACqE,cAAL,GAAsBrE,IAAI,CAACqE,cAAL,GAAsBsD,CAAC,CAACnD,IAA9C;AACA,mBAAK4C,WAAL,CAAiBO,CAAC,CAACnD,IAAnB;AACC;AACF;;AAEDmD,UAAAA,CAAC,CAAClD,MAAF,GAAW,CAACkD,CAAC,CAAClD,MAAd,CAtBF,CAuBE;AACD;;AACD,eAAOkD,CAAP;AACD,OA5Bc,CAAf;AA8BA,WAAKX,QAAL,CAAc;AAAES,QAAAA,QAAF;AAAYI,QAAAA,QAAZ;AAAsBC,QAAAA,QAAtB;AAAgCC,QAAAA,QAAhC;AAA0C7G,QAAAA;AAA1C,OAAd,EA5HgC,CA6HhC;AACD,KAEkB;;AAAA,SAInB8G,UAJmB,GAIN,MAAM;AACjB,WAAKhB,QAAL,CAAc;AACZ5F,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWS,IADL;AAEZE,QAAAA,KAAK,EAAE2G,IAAI,CAACC,GAAL;AAFK,OAAd;AAIA,WAAKC,KAAL,GAAaC,WAAW,CAAC,MAAM,KAAKpB,QAAL,CAAc;AAC3C5F,QAAAA,IAAI,EAAE,CAAC,KAAKT,KAAL,CAAWU,KAAX,GAAiB,IAAjB,GAAwB,KAAKV,KAAL,CAAWW,KAAnC,GAA2C2G,IAAI,CAACC,GAAL,EAA5C,IAAyD;AADpB,OAAd,CAAP,EAEpB,CAFoB,CAAxB;AAGD,KAZkB;;AAAA,SAcnBG,UAdmB,GAcN,MAAM;AAEjB,UAAIC,WAAW,GAAG,CAAC,MAAM,KAAK3H,KAAL,CAAWe,WAAlB,IAA+B,GAA/B,GAAmC,GAArD;AACA,UAAI6G,YAAY,GAAG,CAAC,MAAM,KAAK5H,KAAL,CAAWgB,YAAlB,IAAgC,GAAhC,GAAoC,GAAvD;AACA,UAAI6G,cAAc,GAAG,CAAC,MAAM,KAAK7H,KAAL,CAAWkB,cAAlB,IAAkC,IAAlC,GAAuC,GAA5D;AACA,UAAI4G,gBAAgB,GAAG,CAAC,MAAM,KAAK9H,KAAL,CAAWiB,gBAAlB,IAAoC,GAApC,GAAwC,GAA/D;;AAEA,UAAI8G,KAAK,CAACJ,WAAD,CAAT,EACA;AACEV,QAAAA,KAAK,CAAC,KAAKjH,KAAL,CAAWe,WAAZ,CAAL;AACD;;AAED,WAAKsF,QAAL,CAAc;AACZtF,QAAAA,WAAW,EAAEuF,MAAM,CAAC,CAAC,KAAKtG,KAAL,CAAWe,WAAX,GAAyB4G,WAA1B,EAAuCK,OAAvC,CAA+C,CAA/C,CAAD,CADP;AAEZhH,QAAAA,YAAY,EAAEsF,MAAM,CAAC,CAAC,KAAKtG,KAAL,CAAWgB,YAAX,GAA0B4G,YAA3B,EAAyCI,OAAzC,CAAiD,CAAjD,CAAD,CAFR;AAGZ9G,QAAAA,cAAc,EAAEoF,MAAM,CAAC,CAAC,KAAKtG,KAAL,CAAWkB,cAAX,GAA4B2G,cAA7B,EAA6CG,OAA7C,CAAqD,CAArD,CAAD,CAHV;AAIZ/G,QAAAA,gBAAgB,EAAEqF,MAAM,CAAC,CAAC,KAAKtG,KAAL,CAAWiB,gBAAX,GAA8B6G,gBAA/B,EAAiDE,OAAjD,CAAyD,CAAzD,CAAD,CAJZ;AAKZpH,QAAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS;AALxB,OAAd;AAQD,KAlCkB;;AAAA,SAoCnBwH,UApCmB,GAoCN,MAAM;AAEjB,UAAIC,UAAU,GAAG,OAAO,KAAKlI,KAAL,CAAWuC,QAAnC;AACA2F,MAAAA,UAAU,GAAG5B,MAAM,CAAC4B,UAAU,CAACF,OAAX,CAAmB,CAAnB,CAAD,CAAnB;AACA,WAAK3B,QAAL,CAAc;AACZxF,QAAAA,SAAS,EAAE,KAAKb,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAD7B;AAEZF,QAAAA,QAAQ,EAAE+F,MAAM,CAAC,CAAC,KAAKtG,KAAL,CAAWO,QAAX,GAAsB2H,UAAvB,EAAmCF,OAAnC,CAA2C,CAA3C,CAAD;AAFJ,OAAd;AAID,KA5CkB;;AAAA,SA8CnBG,WA9CmB,GA8CL,MAAM;AAElB,UAAIC,aAAa,GAAG,KAAKpI,KAAL,CAAWe,WAAX,GAAyB,KAAKf,KAAL,CAAWmB,gBAAxD;AACA,UAAIkH,UAAU,GAAG,KAAKrI,KAAL,CAAWgB,YAAX,GAA0B,KAAKhB,KAAL,CAAWoB,iBAAtD;AACA,UAAIkH,WAAW,GAAG,KAAKtI,KAAL,CAAWiB,gBAAX,GAA8B,KAAKjB,KAAL,CAAWqB,qBAA3D;AACA,UAAIkH,UAAU,GAAG,KAAKvI,KAAL,CAAWkB,cAAX,GAA4B,KAAKlB,KAAL,CAAWsB,mBAAxD;AACA,UAAIkH,UAAU,GAAG,CAAC,MAAIJ,aAAJ,GAAoB,MAAIC,UAAxB,GAAqC,MAAIC,WAAzC,GAAuD,MAAIC,UAA5D,IAAwE,CAAzF,CANkB,CASlB;;AACA,WAAKlC,QAAL,CAAc;AACZvF,QAAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAD5B;AAEZ8B,QAAAA,QAAQ,EAAE+D,MAAM,CAAC,CAAC,KAAKtG,KAAL,CAAWuC,QAAX,GAAsBiG,UAAvB,EAAmCR,OAAnC,CAA2C,CAA3C,CAAD,CAFJ;AAGZ3G,QAAAA,qBAAqB,EAAE,KAAKrB,KAAL,CAAWiB,gBAHtB;AAIZG,QAAAA,iBAAiB,EAAE,KAAKpB,KAAL,CAAWgB,YAJlB;AAKZG,QAAAA,gBAAgB,EAAE,KAAKnB,KAAL,CAAWe,WALjB;AAMZO,QAAAA,mBAAmB,EAAE,KAAKtB,KAAL,CAAWkB;AANpB,OAAd;AAQD,KAhEkB;;AAAA,SAkEnBuH,MAlEmB,GAkEV,MAAM;AACb,WAAKpC,QAAL,CAAc;AACZ9D,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KAtEkB;;AAAA,SAwEnBmG,QAxEmB,GAwER,MAAM;AACf,WAAKrC,QAAL,CAAc;AACZ9F,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KA5EkB;;AAAA,SA8EnBoI,SA9EmB,GA8EP,MAAM;AAChB,UAAI5G,QAAQ,GAAG,KAAK/B,KAAL,CAAW+B,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKhC,KAAL,CAAWgC,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKjC,KAAL,CAAWiC,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKlC,KAAL,CAAWkC,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKnC,KAAL,CAAWmC,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKpC,KAAL,CAAWoC,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKrC,KAAL,CAAWqC,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKtC,KAAL,CAAWsC,QAA1B;AAEA,UAAIf,QAAQ,GAAG,KAAKvB,KAAL,CAAWuB,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKxB,KAAL,CAAWwB,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAKzB,KAAL,CAAWyB,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAK1B,KAAL,CAAW0B,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAK3B,KAAL,CAAW2B,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAK5B,KAAL,CAAW4B,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAK7B,KAAL,CAAW6B,QAA1B;AACA,UAAIC,QAAQ,GAAG,KAAK9B,KAAL,CAAW8B,QAA1B;AAEA,UAAIqE,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAR;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACEpE,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAIqE,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAa,QAAAA,QAAQ,GAAG6E,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACEnE,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAIoE,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAc,QAAAA,QAAQ,GAAG4E,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACElE,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAImE,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAe,QAAAA,QAAQ,GAAG2E,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACEjE,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAIkE,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAgB,QAAAA,QAAQ,GAAG0E,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACEhE,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAIiE,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAiB,QAAAA,QAAQ,GAAGyE,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACE/D,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAIgE,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAkB,QAAAA,QAAQ,GAAGwE,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACE9D,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAI+D,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAmB,QAAAA,QAAQ,GAAGuE,CAAX;AACD;;AAEDD,MAAAA,CAAC,GAAGyC,IAAI,CAACC,MAAL,EAAJ;;AACA,UAAI1C,CAAC,GAAG,GAAR,EACA;AACE7D,QAAAA,QAAQ,GAAG,KAAX;AACA,YAAI8D,CAAC,GAAGwC,IAAI,CAACC,MAAL,KAAgB,KAAK7I,KAAL,CAAWU,KAAnC;AACAoB,QAAAA,QAAQ,GAAGsE,CAAX;AACD;;AAEDa,MAAAA,KAAK,CAAC1F,QAAD,EAAUC,QAAV,EAAmBC,QAAnB,EAA4BC,QAA5B,EAAqCC,QAArC,EAA8CC,QAA9C,EAAuDC,QAAvD,EAAgEC,QAAhE,CAAL;AACA,WAAKuE,QAAL,CAAc;AACZtE,QAAAA,QAAQ,EAAEA,QADE;AAEZC,QAAAA,QAAQ,EAAEA,QAFE;AAGZC,QAAAA,QAAQ,EAAEA,QAHE;AAIZC,QAAAA,QAAQ,EAAEA,QAJE;AAKZC,QAAAA,QAAQ,EAAEA,QALE;AAMZC,QAAAA,QAAQ,EAAEA,QANE;AAOZC,QAAAA,QAAQ,EAAEA,QAPE;AAQZC,QAAAA,QAAQ,EAAEA,QARE;AASZf,QAAAA,QAAQ,EAAEA,QATE;AAUZC,QAAAA,QAAQ,EAAEA,QAVE;AAWZC,QAAAA,QAAQ,EAAEA,QAXE;AAYZC,QAAAA,QAAQ,EAAEA,QAZE;AAaZC,QAAAA,QAAQ,EAAEA,QAbE;AAcZC,QAAAA,QAAQ,EAAEA,QAdE;AAeZC,QAAAA,QAAQ,EAAEA,QAfE;AAgBZC,QAAAA,QAAQ,EAAEA;AAhBE,OAAd;AAkBD,KApLkB;;AAAA,SAsLnBgH,gBAtLmB,GAsLCC,GAAD,IAAS,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAEjD,UAAIA,UAAU,KAAKxG,SAAf,IAA4BwG,UAAU,KAAK,IAA/C,EAAqD;AACrD,aAAK5C,QAAL,CAAc;AAAE3D,UAAAA,OAAO,EAAEqG;AAAX,SAAd;AAAgC;AACjC,KA1LkB;;AAAA,SA4LnBG,MA5LmB,GA4LV,MAAM;AACbjC,MAAAA,KAAK,CAAC,UAAD,CAAL;AACA,WAAKZ,QAAL,CAAc;AACZtE,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD,KAjMkB;AAElB;;AAiMDoH,EAAAA,iBAAiB,GAAG;AAClB,SAAK9C,QAAL,CAAc;AACZ3F,MAAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,IADN;AAEZsC,MAAAA,QAAQ,EAAE,KAAKvC,KAAL,CAAWI;AAFT,KAAd,EADkB,CAKlB;;AACA,SAAKiH,UAAL;AACF;;AACE+B,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAGA,QAAI,KAAKpJ,KAAL,CAAWS,IAAX,GAAkB,CAAtB,EACA;AACEwG,MAAAA,KAAK,CAAC,cAAD,CAAL;AACD;;AACD,QAAI,KAAKjH,KAAL,CAAWuC,QAAX,GAAsB,KAAKvC,KAAL,CAAWK,WAAjC,IAAgD,KAAKL,KAAL,CAAWe,WAAX,IAA0B,CAA1E,IAA+E,KAAKf,KAAL,CAAWgB,YAAX,IAA2B,CAA1G,IAA+G,KAAKhB,KAAL,CAAWkB,cAAX,IAA6B,CAA5I,IAAiJ,KAAKlB,KAAL,CAAWiB,gBAAX,IAA+B,CAApL,EACA;AACEgG,MAAAA,KAAK,CAAC,IAAD,CAAL;AACD;;AAED,QAAK,KAAKjH,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAA/B,GAAuC,KAAKT,KAAL,CAAWY,IAAlD,GAAyD,CAAzD,IAA+D,KAAKZ,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAA/B,GAAuC,CAAzG,EACA;AACE,WAAKiH,UAAL;AACD;;AAED,QAAK,KAAK1H,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAA/B,GAAuC,KAAKT,KAAL,CAAWa,SAAlD,GAA8D,EAA9D,IAAqE,KAAKb,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAA/B,GAAuC,CAA/G,EACA;AACE,WAAKwH,UAAL;AACD;;AAED,QAAK,KAAKjI,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAA/B,GAAuC,KAAKT,KAAL,CAAWc,QAAlD,GAA6D,CAA7D,IAAmE,KAAKd,KAAL,CAAWU,KAAX,GAAmB,KAAKV,KAAL,CAAWS,IAA/B,GAAuC,CAA7G,EACA;AACE,WAAK0H,WAAL;AACD;;AAED,QAAI,KAAKnI,KAAL,CAAWuC,QAAX,GAAsB,GAA1B,EACA;AACE,WAAKkG,MAAL;AACD;;AAED,QAAI,KAAKzI,KAAL,CAAWO,QAAX,GAAsB,CAA1B,EACA;AACE,WAAKmI,QAAL;AACD;;AAED,QAAI,KAAK1I,KAAL,CAAW+B,QAAf,EACA,oBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGJ;AAAK,MAAA,KAAK,EAAE;AAACsH,QAAAA,KAAK,EAAC;AAAP,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAkD,KAAKrJ,KAAL,CAAWO,QAAZ,CAAsByH,OAAtB,CAA8B,CAA9B,CAAjD,mBAAgGY,IAAI,CAACU,IAAL,CAAU,KAAKtJ,KAAL,CAAWS,IAArB,CAAhG,kBAAwI,KAAKT,KAAL,CAAWuC,QAAnJ,qBAA4K,KAAKvC,KAAL,CAAWe,WAAvL,sBAAoN,KAAKf,KAAL,CAAWgB,YAA/N,0BAAiQ,KAAKhB,KAAL,CAAWiB,gBAA5Q,wBAAgT,KAAKjB,KAAL,CAAWkB,cAA3T,CAHI,EAIG,KAAKlB,KAAL,CAAW2C,KAAX,CAAiBoE,GAAjB,CAAqBwC,EAAE,iBACtB,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAEA,EAAE,CAAC3G,EADT;AAEE,MAAA,KAAK,EAAE2G,EAAE,CAACzG,KAFZ;AAGE,MAAA,IAAI,EAAEyG,EAAE,CAACpJ,IAHX;AAIE,MAAA,OAAO,EAAE,KAAK8F,UAAL,CAAgBsD,EAAE,CAAC3G,EAAnB,CAJX;AAKE,MAAA,kBAAkB,EAAI,KAAK8D,kBAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJH,CADJ;AAiBD;;AA5hB6B;;AA+hBlC,eAAe7G,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport NavBar from './NavBar.jsx';\nimport AccordionElement from './AccordionElement.jsx';\nimport glob from './global.jsx'\nimport SkillBar from 'react-skillbars';\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport { PieChart } from 'react-minimal-pie-chart';\nimport Card from 'react-bootstrap/Card'\nimport Sound from 'react-sound';\n\n\nclass GameSpace extends Component {\n  state = {\n    term: this.props.location.info.term,\n    startApproval: this.props.location.info.startApproval,\n    minApproval : this.props.location.info.minApproval,\n    mode: this.props.location.info.mode,\n    curFunds: 5,\n    food: 100,\n    time: 360,\n    total: 240,\n    start: 0,\n    last: 0,\n    last_fund: 0,\n    last_app: 0,\n    health_perc: 60,\n    defence_perc: 60,\n    agriculture_perc: 60,\n    education_perc: 60,\n    last_health_perc: 60,\n    last_defence_perc: 60,\n    last_agriculture_perc: 60,\n    last_education_perc: 60,\n    sc1_time: 100000000,\n    sc2_time: 100000000,\n    sc3_time: 100000000,\n    sc4_time: 100000000,\n    sc5_time: 100000000,\n    sc6_time: 100000000,\n    sc7_time: 100000000,\n    sc8_time: 100000000,\n    sc1_flag: true,\n    sc2_flag: true,\n    sc3_flag: true,\n    sc4_flag: true,\n    sc5_flag: true,\n    sc6_flag: true,\n    sc7_flag: true,\n    sc8_flag: true,\n    approval: 40,\n    dept : undefined,\n    curDept : undefined,\n    depts: [\n        { id: glob.healthId, label: \"Health\", info: glob.healthInfo,invst: glob.healthInvst},\n        { id: glob.defenceId, label: \"Defence\" ,info: glob.defenceInfo,invst: glob.defenceInvst },\n        { id: glob.agricultureId, label: \"Agriculture\", info: glob.agricultureInfo,invst : glob.agricultureInvst },\n        { id: glob.educationId, label: \"Education\", info: glob.educationInfo,invst: glob.educationInvst },\n      ],\n    healthOptions: [\n      { id: glob.healthOp1, label: \"ho1\", cost: 2, status: false},\n      { id: glob.healthOp2, label: \"ho2\", cost: 3, status: false},\n      { id: glob.healthOp3, label: \"ho3\", cost: 2, status: false},\n      { id: glob.healthOp4, label: \"ho4\", cost: 6, status: false},\n      { id: glob.healthOp5, label: \"ho5\", cost: 3, status: false},\n      { id: glob.healthOp6, label: \"ho6\", cost: 9, status: false},\n      { id: glob.healthOp7, label: \"ho7\", cost: 4, status: false},\n      { id: glob.healthOp8, label: \"ho8\", cost: 3, status: false},\n    ],\n    defenceOptions: [\n      { id: glob.defenceOp1, label: \"do1\", cost: 2, status: false},\n      { id: glob.defenceOp2, label: \"do2\", cost: 3, status: false},\n      { id: glob.defenceOp3, label: \"do3\", cost: 2, status: false},\n      { id: glob.defenceOp4, label: \"do4\", cost: 6, status: false},\n      { id: glob.defenceOp5, label: \"do5\", cost: 3, status: false},\n      { id: glob.defenceOp6, label: \"do6\", cost: 9, status: false},\n      { id: glob.defenceOp7, label: \"do7\", cost: 4, status: false},\n      { id: glob.defenceOp8, label: \"do8\", cost: 3, status: false},\n    ],\n    agricultureOptions: [\n      { id: glob.agricultureOp1, label: \"ao1\", cost: 2, status: false},\n      { id: glob.agricultureOp2, label: \"ao2\", cost: 3, status: false},\n      { id: glob.agricultureOp3, label: \"ao3\", cost: 2, status: false},\n      { id: glob.agricultureOp4, label: \"ao4\", cost: 6, status: false},\n      { id: glob.agricultureOp5, label: \"ao5\", cost: 3, status: false},\n      { id: glob.agricultureOp6, label: \"ao6\", cost: 9, status: false},\n      { id: glob.agricultureOp7, label: \"ao7\", cost: 4, status: false},\n      { id: glob.agricultureOp8, label: \"ao8\", cost: 3, status: false},\n    ],\n    educationOptions: [\n      { id: glob.educationOp1, label: \"eo1\", cost: 2, status: false},\n      { id: glob.educationOp2, label: \"eo2\", cost: 3, status: false},\n      { id: glob.educationOp3, label: \"eo3\", cost: 2, status: false},\n      { id: glob.educationOp4, label: \"eo4\", cost: 6, status: false},\n      { id: glob.educationOp5, label: \"eo5\", cost: 3, status: false},\n      { id: glob.educationOp6, label: \"eo6\", cost: 9, status: false},\n      { id: glob.educationOp7, label: \"eo7\", cost: 4, status: false},\n      { id: glob.educationOp8, label: \"eo8\", cost: 3, status: false},\n    ],\n  }\n\n\n  getOptions = (id) => {\n    switch(id)\n    {\n      case glob.healthId : return this.state.healthOptions;\n      case glob.educationId : return this.state.educationOptions;\n      case glob.agricultureId : return this.state.agricultureOptions;\n      case glob.defenceId : return this.state.defenceOptions;\n      default: break;\n    }\n  }\n\n  increaseHealth = (x) => {\n    let y = x\n    if (y < 0)\n    {\n      y = 1.5*x\n    }\n    y = this.state.health_perc + y\n    this.setState({\n      time: this.state.time,\n      health_perc: Number(y),\n    })\n  }\n\n  increaseDef = (x) => {\n    let y = x\n    if (y < 0)\n    {\n      y = 1.5*x\n    }\n    y = this.state.defence_perc + y\n    this.setState({\n      defence_perc: Number(y),\n    })\n  }\n\n  increaseAgri = (x) => {\n    let y = x\n    if (y < 0)\n    {\n      y = 1.5*x\n    }\n\n    y = this.state.agriculture_perc + y\n    this.setState({\n      agriculture_perc: Number(y),\n    })\n  }\n\n  increaseEdu = (x) => {\n    let y = x\n    if (y < 0)\n    {\n      y = 1.5*x\n    }\n    y = this.state.education_perc + y\n    this.setState({\n      education_perc: Number(y),\n    })\n  }\n\n  changeButtonStatus = (element) => {\n    console.log(element.id, element.status)\n    let curFunds = this.state.curFunds\n\n    let options1 = this.state.defenceOptions.map(c => {\n      if(element !== undefined && c.id === element.id)\n      {\n        if(c.status)\n        {\n          curFunds = curFunds + c.cost*0.6\n          glob.defenceInvst = glob.defenceInvst - c.cost\n          this.increaseDef(-1*c.cost)\n        }\n        else\n        {\n          if (this.state.curFunds < c.cost)\n          {\n            alert(\"Not enough funds bruh\")\n            c.status = !c.status\n          }\n          else\n          {\n          curFunds = curFunds - c.cost\n          glob.defenceInvst = glob.defenceInvst + c.cost\n          this.increaseDef(c.cost)\n          }\n        }\n        c.status = !c.status\n\n        // console.log(curFunds, c.cost)\n      }\n      return c;\n    });\n\n    let options2 = this.state.healthOptions.map(c => {\n      if(element !== undefined && c.id === element.id)\n      {\n        if(c.status)\n        {\n          curFunds = curFunds + c.cost*0.6\n          glob.healthInvst = glob.healthInvst - c.cost\n          this.increaseHealth(-1*c.cost)\n        }\n        else\n        {\n          if (this.state.curFunds < c.cost)\n          {\n            alert(\"Not enough funds bruh\")\n            c.status = !c.status\n          }\n          else{\n          curFunds = curFunds - c.cost\n          glob.healthInvst = glob.healthInvst + c.cost\n          this.increaseHealth(c.cost)\n          }\n        }\n\n        // alert(glob.healthInvst)\n        c.status = !c.status\n        // console.log(curFunds, c.cost)\n      }\n      return c;\n    });\n\n    let options3 = this.state.agricultureOptions.map(c => {\n      if(element !== undefined && c.id === element.id)\n      {\n        if(c.status)\n        {\n          curFunds = curFunds + c.cost*0.6\n          glob.agricultureInvst = glob.agricultureInvst - c.cost\n          this.increaseAgri(-1*c.cost)\n        }\n        else\n        {\n          if (this.state.curFunds < c.cost)\n          {\n            alert(\"Not enough funds bruh\")\n            c.status = !c.status\n          }\n          else{\n          curFunds = curFunds - c.cost\n          glob.agricultureInvst = glob.agricultureInvst + c.cost\n          this.increaseAgri(c.cost)\n          }\n        }\n\n        c.status = !c.status\n        // console.log(curFunds, c.cost)\n      }\n\n      return c;\n    });\n\n    let options4 = this.state.educationOptions.map(c => {\n      if(element !== undefined && c.id === element.id)\n      {\n        if(c.status)\n        {\n          curFunds = curFunds + c.cost*0.6\n          glob.educationInvst = glob.educationInvst - c.cost\n          this.increaseEdu(-1*c.cost)\n        }\n        else\n        {\n          if (this.state.curFunds < c.cost)\n          {\n            alert(\"Not enough funds bruh\")\n            c.status = !c.status\n          }\n          else\n          {\n          curFunds = curFunds - c.cost\n          glob.educationInvst = glob.educationInvst + c.cost\n          this.increaseEdu(c.cost)\n          }\n        }\n\n        c.status = !c.status\n        // console.log(curFunds, c.cost)\n      }\n      return c;\n    });\n\n    this.setState({ options1, options2, options3, options4, curFunds });\n    // alert(\"set\")\n  }\n\n  constructor(props) {\n    super(props)\n  }\n\n  startTimer = () => {\n    this.setState({\n      time: this.state.time,\n      start: Date.now(),\n    })\n    this.timer = setInterval(() => this.setState({\n      time: (this.state.total*1000 + this.state.start - Date.now() )/1000\n    }), 1);\n  }\n\n  updatePerc = () => {\n\n    let health_rate = (100 - this.state.health_perc)*0.6/100\n    let defence_rate = (100 - this.state.defence_perc)*0.5/100\n    let education_rate = (100 - this.state.education_perc)*0.45/100\n    let agriculture_rate = (100 - this.state.agriculture_perc)*0.4/100\n\n    if (isNaN(health_rate))\n    {\n      alert(this.state.health_perc)\n    }\n\n    this.setState({\n      health_perc: Number((this.state.health_perc - health_rate).toFixed(1)),\n      defence_perc: Number((this.state.defence_perc - defence_rate).toFixed(1)),\n      education_perc: Number((this.state.education_perc - education_rate).toFixed(1)),\n      agriculture_perc: Number((this.state.agriculture_perc - agriculture_rate).toFixed(1)),\n      last: this.state.total - this.state.time,\n    })\n\n  }\n\n  updateFund = () => {\n\n    let added_fund = 0.05 * this.state.approval\n    added_fund = Number(added_fund.toFixed(1))\n    this.setState({\n      last_fund: this.state.total - this.state.time,\n      curFunds: Number((this.state.curFunds + added_fund).toFixed(2)),\n    })\n  }\n\n  updateVoter = () => {\n\n    let health_change = this.state.health_perc - this.state.last_health_perc\n    let def_change = this.state.defence_perc - this.state.last_defence_perc\n    let agri_change = this.state.agriculture_perc - this.state.last_agriculture_perc\n    let edu_change = this.state.education_perc - this.state.last_education_perc\n    let app_change = (0.6*health_change + 0.4*def_change + 0.2*agri_change + 0.1*edu_change)/2\n\n\n    // alert(edu_change)\n    this.setState({\n      last_app: this.state.total - this.state.time,\n      approval: Number((this.state.approval + app_change).toFixed(2)),\n      last_agriculture_perc: this.state.agriculture_perc,\n      last_defence_perc: this.state.defence_perc,\n      last_health_perc: this.state.health_perc,\n      last_education_perc: this.state.education_perc,\n    })\n  }\n\n  maxApp = () => {\n    this.setState({\n      approval: 100,\n    })\n  }\n\n  minFunds = () => {\n    this.setState({\n      curFunds: 0,\n    })\n  }\n\n  scenarios = () => {\n    let sc1_flag = this.state.sc1_flag\n    let sc2_flag = this.state.sc2_flag\n    let sc3_flag = this.state.sc3_flag\n    let sc4_flag = this.state.sc4_flag\n    let sc5_flag = this.state.sc5_flag\n    let sc6_flag = this.state.sc6_flag\n    let sc7_flag = this.state.sc7_flag\n    let sc8_flag = this.state.sc8_flag\n\n    let sc1_time = this.state.sc1_time\n    let sc2_time = this.state.sc2_time\n    let sc3_time = this.state.sc3_time\n    let sc4_time = this.state.sc4_time\n    let sc5_time = this.state.sc5_time\n    let sc6_time = this.state.sc6_time\n    let sc7_time = this.state.sc7_time\n    let sc8_time = this.state.sc8_time\n\n    let x = Math.random()\n    if (x > 0.5)\n    {\n      sc1_flag = false\n      let y = Math.random() * this.state.total\n      sc1_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc2_flag = false\n      let y = Math.random() * this.state.total\n      sc2_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc3_flag = false\n      let y = Math.random() * this.state.total\n      sc3_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc4_flag = false\n      let y = Math.random() * this.state.total\n      sc4_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc5_flag = false\n      let y = Math.random() * this.state.total\n      sc5_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc6_flag = false\n      let y = Math.random() * this.state.total\n      sc6_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc7_flag = false\n      let y = Math.random() * this.state.total\n      sc7_time = y\n    }\n\n    x = Math.random()\n    if (x > 0.5)\n    {\n      sc8_flag = false\n      let y = Math.random() * this.state.total\n      sc8_time = y\n    }\n\n    alert(sc1_time,sc2_time,sc3_time,sc4_time,sc5_time,sc6_time,sc7_time,sc8_time)\n    this.setState({\n      sc1_flag: sc1_flag,\n      sc2_flag: sc2_flag,\n      sc3_flag: sc3_flag,\n      sc4_flag: sc4_flag,\n      sc5_flag: sc5_flag,\n      sc6_flag: sc6_flag,\n      sc7_flag: sc7_flag,\n      sc8_flag: sc8_flag,\n      sc1_time: sc1_time,\n      sc2_time: sc2_time,\n      sc3_time: sc3_time,\n      sc4_time: sc4_time,\n      sc5_time: sc5_time,\n      sc6_time: sc6_time,\n      sc7_time: sc7_time,\n      sc8_time: sc8_time,\n    })\n  }\n\n  handleSelectDept = (key) => (event, isExpanded) => {\n\n    if (isExpanded === undefined || isExpanded === true) {\n    this.setState({ curDept: key })}\n  }\n\n  scene1 = () => {\n    alert(\"woah man\")\n    this.setState({\n      sc1_flag: true,\n    })\n  }\n\n  componentDidMount() {\n    this.setState({\n      total: this.state.term,\n      approval: this.state.startApproval,\n    })\n    // this.scenarios()\n    this.startTimer()\n }\n    render() {\n      // console.log(this.state.term, this.state.startApproval, this.state.minApproval, this.state.mode)\n      // alert(this.state.curfunds)\n      // alert(this.state.time)\n\n\n      if (this.state.time < 0)\n      {\n        alert(\"time up bruh\")\n      }\n      if (this.state.approval < this.state.minApproval || this.state.health_perc <= 0 || this.state.defence_perc <= 0 || this.state.education_perc <= 0 || this.state.agriculture_perc <= 0)\n      {\n        alert(\"GG\")\n      }\n\n      if ((this.state.total - this.state.time) - this.state.last > 1 && (this.state.total - this.state.time) > 5)\n      {\n        this.updatePerc()\n      }\n\n      if ((this.state.total - this.state.time) - this.state.last_fund > 20 && (this.state.total - this.state.time) > 5)\n      {\n        this.updateFund()\n      }\n\n      if ((this.state.total - this.state.time) - this.state.last_app > 1 && (this.state.total - this.state.time) > 5)\n      {\n        this.updateVoter()\n      }\n\n      if (this.state.approval > 100)\n      {\n        this.maxApp()\n      }\n\n      if (this.state.curFunds < 0)\n      {\n        this.minFunds()\n      }\n\n      if (this.state.sc1_flag)\n      return (\n          <React.Fragment>\n            <NavBar />\n\n      <div style={{color:'white'}}> Current funding : {(this.state.curFunds).toFixed(2)} Time left : {Math.ceil(this.state.time)} Approval : {this.state.approval} health_perc : {this.state.health_perc} defence_perc : {this.state.defence_perc} agriculture_perc : {this.state.agriculture_perc} education_perc : {this.state.education_perc}</div>\n            {this.state.depts.map(el =>\n              <AccordionElement\n                id={el.id}\n                label={el.label}\n                info={el.info}\n                options={this.getOptions(el.id)}\n                changeButtonStatus = {this.changeButtonStatus}\n              />\n            )}\n\n          </React.Fragment>\n        );\n    }\n}\n\nexport default GameSpace;\n"]},"metadata":{},"sourceType":"module"}
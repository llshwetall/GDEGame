{"ast":null,"code":"import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY'];\nconst paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnarySpacing(theme) {\n  const themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`Material-UI: Expected spacing argument to be a number or a string, got ${abs}.`);\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error(['Material-UI: The `theme.spacing` array type cannot be combined with non integer values.' + 'You should either use an integer value that can be used as index, or define the `theme.spacing` as a number.'].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`Material-UI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`Material-UI: The \\`theme.spacing\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return () => undefined;\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return `-${transformed}`;\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\n\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\n\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\n\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","map":{"version":3,"sources":["/home/shweta/GDEGame/node_modules/@material-ui/system/esm/spacing.js"],"names":["responsivePropType","handleBreakpoints","merge","memoize","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","prop","length","a","split","property","direction","Array","isArray","map","dir","marginKeys","paddingKeys","spacingKeys","createUnarySpacing","theme","themeSpacing","spacing","abs","process","env","NODE_ENV","console","error","Number","isInteger","join","JSON","stringify","undefined","getValue","transformer","propValue","Math","transformed","getStyleFromPropValue","cssProperties","reduce","acc","cssProperty","resolveCssProperty","props","keys","indexOf","styleFromPropValue","style","Object","margin","propTypes","obj","key","filterProps","padding"],"mappings":"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","sourcesContent":["import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY'];\nconst paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnarySpacing(theme) {\n  const themeSpacing = theme.spacing || 8;\n\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`Material-UI: Expected spacing argument to be a number or a string, got ${abs}.`);\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error(['Material-UI: The `theme.spacing` array type cannot be combined with non integer values.' + 'You should either use an integer value that can be used as index, or define the `theme.spacing` as a number.'].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`Material-UI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`Material-UI: The \\`theme.spacing\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return () => undefined;\n}\n\nfunction getValue(transformer, propValue) {\n  if (typeof propValue === 'string') {\n    return propValue;\n  }\n\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return `-${transformed}`;\n}\n\nfunction getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\n\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\n\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\n\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;"]},"metadata":{},"sourceType":"module"}